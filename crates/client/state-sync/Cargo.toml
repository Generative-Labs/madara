[package]
name = "mc-state-sync"
edition.workspace = true
repository.workspace = true
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
async-trait = { workspace = true }
anyhow = { workspace = true }

# Ethereum
ethers = "2.0.7"

# Starknet
blockifier = { workspace = true, default-features = true }
starknet_api = { workspace = true }

# Substrate
sp-runtime = { workspace = true }
sp-blockchain = { workspace = true }
sc-client-api = { workspace = true }
sc-client-db = { workspace = true }
# Madara
mp-transactions = { workspace = true }
mc-db = { workspace = true }

frame-support = { worksapce = true }
mp-storage = { workspace = true  }
indexmap = { workspace = true }
sp-state-machine = { workspace = true }
sp-core = { workspace = true }
madara-runtime = { workspace = true }
sp-api = { workspace = true }
mc-rpc-core = { workspace = true }
mp-block = { workspace = true }
mp-hashers = { workspace = true }
mp-digest-log = { workspace = true }

[dev-dependencies]
substrate-test-client = { workspace = true }
serde_json = { workspace = true }
pallet-starknet = { workspace = true }
futures = { workspace = true }
project-root = "0.2.2"
test-case = "3.1.0"
lazy_static = "1.4.0"
hexlit = "0.5.5"
assert_matches = "1.5.0"
mp-felt = { workspace = true, features = ["parity-scale-codec", "serde"] }
starknet-core = { workspace = true }
starknet-crypto = { workspace = true, features = ["alloc"] }
sc-block-builder = { workspace = true }
sp-inherents = { workspace = true }
sp-timestamp = { workspace = true }
pretty_assertions = { workspace = true }

